@page "/counter"
@using StrawberryShake
@inject ExecuteGapMutation

<PageTitle>Counter</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Counter</MudText>

<MudText Class="mb-4">Current count: @currentCount</MudText>

<MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="IncrementCount">Click me</MudButton>



<StandaloneCodeEditor @ref="_editor" Id="my-code-editor" ConstructionOptions="EditorConstructionOptions" />

<MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="RunGapCode">Submit Code</MudButton>

<MudText Class="mb-4">Output: "@output"</MudText>
<MudText Class="mb-4">Error: "@error"</MudText>

@code {
    private StandaloneCodeEditor? _editor;
    private StandaloneEditorConstructionOptions EditorConstructionOptions(StandaloneCodeEditor editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = false,
            Language = "javascript",
            Value = "function xyz() {\n" +
                    "   console.log(\"Hello world!\");\n" +
                    "}"
        };
    }

    private string output = string.Empty;
    private string error = string.Empty;

    private async Task RunGapCode()
    {
        var result = await ExecuteGapMuation.ExecuteAsync(new ExecuteGapInput() {
            Code = await _editor!.GetValue()
        });

        if (result.IsSuccessResult())
        {
            output = result.Data!.ExecuteGap!.Output!;
            error = string.Empty;
        }
        else
        {
            output = string.Empty;
            error = string.Join(", ", result.Errors!.Select(e => e.Message));
        }
    }
}


@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}

@page "/notebookeditor"
@using MudBlazor

@code {
    // Each block is a string (could be code, math, markdown, etc.)
    private List<string> Blocks = new() { "" };

    // Stores evaluation results for each block
    private List<string> Results = new() { "" };

    // Evaluate a block (replace with your actual evaluation logic)
    private async Task EvaluateBlock(int index)
    {
        // Example: just echo the input for now
        Results[index] = $"Evaluated: {Blocks[index]}";
        await InvokeAsync(StateHasChanged);
    }
}

<MudPaper Class="pa-4" Elevation="2">
    <MudText Typo="Typo.h5">Notebook Editor</MudText>
    @for (int i = 0; i < Blocks.Count; i++)
    {
        <MudTextField @bind-Value="Blocks[i]" Label=@($"Block {i + 1}") Lines="4" Margin="Margin.Dense" />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => EvaluateBlock(i))">
            Evaluate
        </MudButton>
        <MudText Typo="Typo.body2" Class="mt-2 mb-4">@Results[i]</MudText>
        <MudDivider />
    }
</MudPaper>